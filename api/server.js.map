{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["import bodyParser from 'body-parser';\nimport express from 'express';\nimport nunjucks from 'nunjucks';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst db = require('../db.json');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Stripe = require('stripe');\nconst domainRoot = process.env.DOMAIN_ROOT ?? 'http://localhost:3000';\nconst app = express();\nconst stripe = Stripe(\n  'sk_test_51LHShpGP9mrjBLL1eEwI10bh9nxRh4ySUJO2TLJ1fsLoJfZJCff3xf3mHA7expvCqNwubDH1oQfkRxSAqhzaLOsb00k415ICdi',\n);\n\nnunjucks.configure('views', {\n  autoescape: true,\n  express: app,\n  noCache: true,\n});\napp.use(express.static('public'));\napp.use(\n  bodyParser.urlencoded({\n    extended: true,\n  }),\n);\n\napp.get('/', function (req, res) {\n  res.render('index.html', { items: db.items });\n});\n\napp.get('/items/:id', (req, res) => {\n  const orderQuantity = req.query.orderQuantity || 0;\n  const cancelled = req.query.cancelled || false;\n  const item = db.items.find((item) => item.id === parseInt(req.params.id));\n  res.render('single-item.html', { item: item, orderQuantity: orderQuantity, cancelled: cancelled });\n});\n\napp.post('/buy/items/', async (req, res) => {\n  const item = db.items.find((item) => item.id === parseInt(req.body.id));\n  const orderQuantity = parseInt(req.body.quantity);\n\n  const session = await stripe.checkout.sessions.create({\n    line_items: [\n      {\n        price_data: {\n          currency: 'usd',\n          product_data: {\n            name: item.name,\n            description: item.description,\n            images: [`${domainRoot}${item.picture}`],\n          },\n          unit_amount: item.price,\n        },\n        quantity: orderQuantity,\n      },\n    ],\n    mode: 'payment',\n    success_url: `${domainRoot}/items/${item.id}?orderQuantity=${orderQuantity}`,\n    cancel_url: `${domainRoot}/items/${item.id}?cancelled=true`,\n  });\n\n  res.redirect(303, session.url);\n});\n\napp.get('/buy/success/', (req, res) => {\n  res.send('You have successfully bought your products.');\n});\n\napp.listen(process.env.PORT ?? 3000);\n"]}